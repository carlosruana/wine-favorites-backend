{"version":3,"file":"WineController.js","sourceRoot":"","sources":["../../src/controllers/WineController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,0DAA6C;AAC7C,gEAAsD;AACtD,oEAA4D;AAC5D,kEAA0C;AAC1C,0DAAsD;AACtD,mCAAgC;AAChC,oDAA4B;AAE5B,iCAAiC;AACjC,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,oBAAoB,EAAE,CAAC;AAE1C,MAAM,QAAQ,GAAG,CAAO,GAAY,EAAE,GAA4C,EAAE,EAAE;IAC3F,IAAI,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC1B,MAAM,KAAK,GAAG,MAAM,cAAI,CAAC,IAAI,EAAE,CAAC;QAChC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AARW,QAAA,QAAQ,YAQnB;AAEK,MAAM,OAAO,GAAG,CAAO,GAAY,EAAE,GAA0C,EAAE,EAAE;IACxF,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAC/D,IAAI,CAAC;QACH,sDAAsD;QACtD,MAAM,OAAO,GAAU;YACrB,IAAI;YACJ,MAAM;YACN,QAAQ;YACR,IAAI;YACJ,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,eAAM,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,6CAA6C;SACnH,CAAC;QAEF,MAAM,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,+BAA+B;QACzD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,6BAA6B;IAC9D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AAlBW,QAAA,OAAO,WAkBlB;AAEK,MAAM,aAAa,GAAG,CAAO,GAAY,EAAE,GAA0C,EAAE,EAAE;IAC9F,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACtE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AATW,QAAA,aAAa,iBASxB;AAEK,MAAM,cAAc,GAAG,CAAO,GAAY,EAAE,GAA0C,EAAE,EAAE;IAC/F,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,MAAM,cAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,+BAA+B;QACtD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AAXW,QAAA,cAAc,kBAWzB;AAEK,MAAM,YAAY,GAAG,CAAO,GAAY,EAAE,GAA4C,EAAE,EAAE;IAC/F,IAAI,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACnC,MAAM,aAAa,GAAG,MAAM,cAAI,CAAC,IAAI,EAAE,CAAC;QACxC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AARW,QAAA,YAAY,gBAQvB;AAEK,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAA+C,EAAE,EAAE;IAChG,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,iBAAO,CAAC,IAAI,EAAE,CAAC;QACrC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AAPW,QAAA,UAAU,cAOrB;AAEK,MAAM,mBAAmB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACvE,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAE7C,MAAM,EAAE,GAAG,IAAA,gBAAM,EAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IAE5C,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAO,UAAe,EAAE,IAErC,EAAE,IAA6C,EAAE,EAAE;QAClD,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACpC,MAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE9C,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,GAAS,EAAE;YACxB,IAAI,CAAC;gBACH,MAAM,WAAW,GAAG,eAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAE3C,uCAAuC;gBACvC,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;gBACrD,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;gBACzD,MAAM,UAAU,GAAG,MAAM,CAAC,eAAe,CAAC;gBAE1C,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;oBACzE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,CAAC;gBAC5D,CAAC;gBAED,MAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBAC1D,OAAO,CAAC,GAAG,CAAC,uBAAuB,gBAAgB,EAAE,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC;gBAE3C,2BAA2B;gBAC3B,MAAM,SAAS,GAAe;oBAC5B,QAAQ,EAAE,QAAQ;oBAClB,WAAW,EAAE,QAAQ;oBACrB,KAAK,EAAE,WAAW;oBAClB,QAAQ,EAAE,gBAAgB;oBAC1B,UAAU,EAAE,IAAI,IAAI,EAAE;iBACvB,CAAC;gBAEF,MAAM,mBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEhC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,CAAC,CAAC;YACvD,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;gBAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAA,CAAC,CAAC;IAEH,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACf,CAAC,CAAA,CAAC;AAlDW,QAAA,mBAAmB,uBAkD9B;AAEK,MAAM,cAAc,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAClE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,IAAA,4BAAY,EAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC7D,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AAXW,QAAA,cAAc,kBAWzB;AAEK,MAAM,qBAAqB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACzE,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,IAAI,CAAC;QACH,MAAM,YAAY,GAAG,MAAM,iBAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;QAEvF,MAAM,iBAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,8CAA8C;QAC5E,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;IAC7D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC;IAC1G,CAAC;AACH,CAAC,CAAA,CAAC;AAXW,QAAA,qBAAqB,yBAWhC","sourcesContent":["import { Request, Response } from 'express';\nimport Wine, { IWine } from '../models/Wine';\nimport History, { IHistory } from '../models/History';\nimport WineImage, { IWineImage } from '../models/WineImage';\nimport vision from '@google-cloud/vision';\nimport { scrapeVivino } from '../utils/vivinoScraper';\nimport { Buffer } from 'buffer';\nimport busboy from 'busboy';\n\n// Configure Google Vision client\nconst client = new vision.ImageAnnotatorClient();\n\nexport const getWines = async (req: Request, res: Response<IWine[] | { message: string }>) => {\n  try {\n\tconsole.log(\"getting wines\");\n    const wines = await Wine.find();\n    res.status(200).json(wines);\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const addWine = async (req: Request, res: Response<IWine | { message: string }>) => {\n  const { name, rating, comments, type, imageBase64 } = req.body;\n  try {\n    // Save the wine directly using the Wine.save() method\n    const newWine: IWine = {\n      name,\n      rating,\n      comments,\n      type,\n      favorite: false,\n      image: imageBase64 ? Buffer.from(imageBase64, 'base64') : undefined, // Save the image as binary data if available\n    };\n\n    await Wine.save(newWine); // Use the save method directly\n    res.status(201).json(newWine); // Return the new wine object\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const getWineByName = async (req: Request, res: Response<IWine | { message: string }>) => {\n  const { name } = req.params;\n  try {\n    const wine = await Wine.findOne({ name });\n    if (!wine) return res.status(404).json({ message: 'Wine not found' });\n    res.status(200).json(wine);\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const toggleFavorite = async (req: Request, res: Response<IWine | { message: string }>) => {\n  const { id } = req.params;\n  try {\n    const wine = await Wine.findById(id);\n    if (!wine) return res.status(404).json({ message: 'Wine not found' });\n    wine.favorite = !wine.favorite;\n    await Wine.save(wine); // Save the updated wine object\n    res.status(200).json(wine);\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const getFavorites = async (req: Request, res: Response<IWine[] | { message: string }>) => {\n  try {\n\tconsole.log(\"Getting favorite wines\");\n    const favoriteWines = await Wine.find();\n    res.status(200).json(favoriteWines);\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const getHistory = async (req: Request, res: Response<IHistory[] | { message: string }>) => {\n  try {\n    const history = await History.find();\n    res.status(200).json(history);\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const analyzeAndSaveImage = async (req: Request, res: Response) => {\n  console.log(\"Received image upload request\");\n  \n  const bb = busboy({ headers: req.headers });\n\n  bb.on('file', async (_fieldname: any, file: {\n    on: (event: string, callback: (data: any) => void) => void;\n  }, info: { filename: string; mimeType: string; }) => {\n    const { filename, mimeType } = info;\n    const buffers: Buffer[] = [];\n\n    file.on('data', (data) => buffers.push(data));\n\n    file.on('end', async () => {\n      try {\n        const imageBuffer = Buffer.concat(buffers);\n\n        // Analyze image with Google Vision API\n        console.log(\"Analyzing image with Google Vision...\");\n        const [result] = await client.textDetection(imageBuffer);\n        const detections = result.textAnnotations;\n\n        if (!detections || detections.length === 0 || !detections[0].description) {\n          return res.status(404).json({ message: 'No text found' });\n        }\n\n        const detectedWineName = detections[0].description.trim();\n        console.log(`Detected wine name: ${detectedWineName}`);\n        console.log(`Detected file info: ${info}`);\n\n        // Create wine image object\n        const wineImage: IWineImage = {\n          filename: filename,\n          contentType: mimeType,\n          image: imageBuffer,\n          wineName: detectedWineName,\n          uploadDate: new Date(),\n        };\n\n        await WineImage.save(wineImage);\n\n        res.status(200).json({ wineName: detectedWineName });\n      } catch (error) {\n        console.error(\"Error processing image:\", error);\n        res.status(500).json({ message: \"Error analyzing image\" });\n      }\n    });\n  });\n\n  req.pipe(bb);\n};\n\nexport const getWineDetails = async (req: Request, res: Response) => {\n  const { name } = req.params;\n  try {\n    const wineInfo = await scrapeVivino(name);\n    if (wineInfo.length === 0) {\n      return res.status(404).json({ message: 'Wine not found' });\n    }\n    res.status(200).json(wineInfo);\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n\nexport const deleteWineFromHistory = async (req: Request, res: Response) => {\n  const { id } = req.params;\n  try {\n    const historyEntry = await History.findById(id);\n    if (!historyEntry) return res.status(404).json({ message: 'History entry not found' });\n\n    await History.deleteById(id); // Use deleteById instead of findByIdAndDelete\n    res.status(200).json({ message: 'History entry deleted' });\n  } catch (error) {\n    res.status(500).json({ message: error instanceof Error ? error.message : 'An unknown error occurred' });\n  }\n};\n"]}