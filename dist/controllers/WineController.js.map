{"version":3,"file":"WineController.js","sourceRoot":"","sources":["../../src/controllers/WineController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\nimport Wine, { IWine } from '../models/wine';\nimport History from '../models/History';\nimport fs from 'fs';\nimport vision from '@google-cloud/vision';\nimport { scrapeVivino } from '../utils/vivinoScraper';\n\n// Configura el cliente de Google Vision\nconst client = new vision.ImageAnnotatorClient({\n  keyFilename: 'wines-426406-2d14643d2f06.json', // Reemplaza esto con la ruta al archivo de claves JSON\n});\n\n// Obtener todos los vinos\nexport const getWines = async (req: Request, res: Response) => {\n  try {\n    const wines = await Wine.find();\n    res.status(200).json(wines);\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Agregar un vino\nexport const addWine = async (req: Request, res: Response) => {\n  const { name, rating, comments, type } = req.body;\n\n  try {\n    const newWine = new Wine({ name, rating, comments, type });\n    await newWine.save();\n    res.status(201).json(newWine);\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Obtener un vino por nombre desde la base de datos\nexport const getWineByName = async (req: Request, res: Response) => {\n  const { name } = req.params;\n\n  try {\n    const wine = await Wine.findOne({ name });\n    if (!wine) {\n      return res.status(404).json({ message: 'Wine not found' });\n    }\n    res.status(200).json(wine);\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Marcar un vino como favorito\nexport const toggleFavorite = async (req: Request, res: Response) => {\n  const { id } = req.params;\n\n  try {\n    const wine = await Wine.findById(id);\n    if (!wine) {\n      return res.status(404).json({ message: 'Wine not found' });\n    }\n    wine.favorite = !wine.favorite;\n    await wine.save();\n    res.status(200).json(wine);\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Obtener vinos favoritos\nexport const getFavorites = async (req: Request, res: Response) => {\n  try {\n    const favoriteWines = await Wine.find({ favorite: true });\n    res.status(200).json(favoriteWines);\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Obtener el historial de imÃ¡genes subidas\nexport const getHistory = async (req: Request, res: Response) => {\n  try {\n    const history = await History.find().sort({ uploadDate: -1 });\n    res.status(200).json(history);\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Analizar la imagen de la botella de vino y guardar en el historial\nexport const analyzeAndSaveImage = async (req: Request, res: Response) => {\n  if (!req.file) {\n    return res.status(400).json({ message: 'No file uploaded' });\n  }\n\n  const imageUrl = `/uploads/${req.file.filename}`;\n  try {\n    // Analiza la imagen utilizando la API de Google Vision para detecciÃ³n de texto\n    const filePath = req.file.path;\n    const [result] = await client.textDetection(filePath);\n    const detections = result.textAnnotations;\n\n    if (!detections || detections.length === 0 || !detections[0].description) {\n      return res.status(404).json({ message: 'No text found' });\n    }\n\n    // Extrae el texto detectado\n    const detectedText = detections[0].description.trim();\n\n    // Elimina la imagen despuÃ©s del anÃ¡lisis\n    fs.unlinkSync(filePath);\n\n    // Guarda en el historial\n    const historyEntry = new History({\n      imageUrl,\n      wineName: detectedText,\n    });\n    await historyEntry.save();\n\n    res.status(200).json({ wineName: detectedText }); // Retorna el nombre del vino correctamente\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n\n// Obtener detalles del vino desde Vivino\nexport const getWineDetails = async (req: Request, res: Response) => {\n  const { name } = req.params;\n  try {\n    const wineInfo = await scrapeVivino(name);\n    if (wineInfo.length === 0) {\n      res.status(404).json({ message: 'Wine not found' });\n    } else {\n      res.status(200).json(wineInfo);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      res.status(500).json({ message: error.message });\n    } else {\n      res.status(500).json({ message: 'An unknown error occurred' });\n    }\n  }\n};\n"]}